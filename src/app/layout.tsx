import type { Metadata } from "next";
import { Roboto_Flex, Lora } from "next/font/google";
import "./globals.scss";
import { gql } from "@apollo/client";
import { getClient } from "@faustwp/experimental-app-router";
import "@/../faust.config.mjs";
import { FaustProvider } from "@faustwp/experimental-app-router/ssr";
import { AppNavMenuList } from "@/components/app-nav-menu-list";
import { cn } from "@/lib/cn";
import WPBlocksProvider from "../components/WPBlocksProvider";
import blocks from "@/wp-blocks";
import { BottomBar } from "../components/BottomBar";
import { Colophon } from "../components/Colophon";
import { MastHead } from "../components/MastHead";
import { TopBar } from "../components/TopBar";

export type WPMenu = {
  __typename?: "Menu";
  id: string;
  name: string;
  menuItems: {
    __typename?: "MenuToMenuItemConnection";
    nodes: WPMenuItem[];
  };
};

export type WPMenuItem = {
  __typename?: "MenuItem";
  id: string;
  key: string;
  parentId: string;
  label: string;
  uri: string;
  children?: WPMenuItem[];
};

const roboto_flex = Roboto_Flex({
  subsets: ["latin"],
  display: "swap",
  variable: "--font-roboto-flex",
});

const lora = Lora({
  subsets: ["latin"],
  display: "swap",
  variable: "--font-lora",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const client = await getClient();

  const { data } = await client.query({
    query: gql`
      query GetLayout {
        generalSettings {
          title
          description
        }
        primaryMenu: menu(id: "primary", idType: LOCATION) {
          __typename # Menu
          id
          name
          menuItems {
            __typename # MenuToMenuItemConnection
            nodes {
              __typename # MenuItem
              id
              key: id
              parentId
              label
              uri
            }
          }
        }
        footerMenu: menu(id: "footer", idType: LOCATION) {
          __typename # Menu
          id
          name
          menuItems {
            __typename # MenuToMenuItemConnection
            nodes {
              __typename # MenuItem
              id
              key: id
              parentId
              label
              uri
            }
          }
        }
      }
    `,
  });

  return (
    <html lang="en">
      <body
        className={cn([lora.className, roboto_flex.className])}
        style={{
          margin: 0, // Reset
          display: "flex", // Sticky footer
          flexDirection: "column", // Sticky footer
          minHeight: "100svh", // Sticky footer
          minWidth: 0, // Fix horizontal overflow caused by flex
        }}
      >
        <a href="#MainContent">Skip to main content</a>
        <FaustProvider>
          <WPBlocksProvider config={{ blocks, theme: null }}>
            <TopBar navLabel={data.primaryMenu.name}>
              <MastHead
                title={data.generalSettings.title as string}
                description={data.generalSettings.description as string}
              />

              {data.primaryMenu && (
                <AppNavMenuList menu={data.primaryMenu as WPMenu} />
              )}
            </TopBar>

            <div id="MainContent" style={{ flex: "1" }}>
              {children}
            </div>

            <BottomBar>
              {data.footerMenu && (
                <nav aria-label={data.footerMenu.name}>
                  <AppNavMenuList menu={data.footerMenu as WPMenu} />
                </nav>
              )}

              <Colophon />
            </BottomBar>
          </WPBlocksProvider>
        </FaustProvider>
      </body>
    </html>
  );
}
